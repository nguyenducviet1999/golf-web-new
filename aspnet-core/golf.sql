--
-- PostgreSQL database dump
--

-- Dumped from database version 12.6 (Ubuntu 12.6-0ubuntu0.20.04.1)
-- Dumped by pg_dump version 12.6 (Ubuntu 12.6-0ubuntu0.20.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: AspNetRoleClaims; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetRoleClaims" (
    "Id" integer NOT NULL,
    "RoleId" uuid NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE public."AspNetRoleClaims" OWNER TO postgres;

--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."AspNetRoleClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."AspNetRoleClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetRoles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetRoles" (
    "Id" uuid NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text
);


ALTER TABLE public."AspNetRoles" OWNER TO postgres;

--
-- Name: AspNetUserClaims; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserClaims" (
    "Id" integer NOT NULL,
    "UserId" uuid NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE public."AspNetUserClaims" OWNER TO postgres;

--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."AspNetUserClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."AspNetUserClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetUserLogins; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" uuid NOT NULL
);


ALTER TABLE public."AspNetUserLogins" OWNER TO postgres;

--
-- Name: AspNetUserRoles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserRoles" (
    "UserId" uuid NOT NULL,
    "RoleId" uuid NOT NULL
);


ALTER TABLE public."AspNetUserRoles" OWNER TO postgres;

--
-- Name: AspNetUserTokens; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserTokens" (
    "UserId" uuid NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text
);


ALTER TABLE public."AspNetUserTokens" OWNER TO postgres;

--
-- Name: AspNetUsers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUsers" (
    "Id" uuid NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    "FirstName" text,
    "LastName" text,
    "Avatar" text,
    "Cover" text,
    "Handicap" double precision NOT NULL,
    "IDX" double precision NOT NULL,
    "CourseFavorites" jsonb
);


ALTER TABLE public."AspNetUsers" OWNER TO postgres;

--
-- Name: Comments; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Comments" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone,
    "ModifiedBy" uuid,
    "DeleteDate" timestamp without time zone,
    "DeleteBy" uuid,
    "GolferId" uuid,
    "PostID" uuid NOT NULL,
    "ParentID" uuid,
    "Content" text,
    "TagIDs" jsonb,
    "PhotoID" text
);


ALTER TABLE public."Comments" OWNER TO postgres;

--
-- Name: Conversations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Conversations" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone,
    "ModifiedBy" uuid,
    "DeleteDate" timestamp without time zone,
    "DeleteBy" uuid,
    "GolferIDs" text,
    "Messages" jsonb
);


ALTER TABLE public."Conversations" OWNER TO postgres;

--
-- Name: CourseExtensions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."CourseExtensions" (
    "ID" integer NOT NULL,
    "Name" text,
    "Icon" text
);


ALTER TABLE public."CourseExtensions" OWNER TO postgres;

--
-- Name: CourseExtensions_ID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."CourseExtensions" ALTER COLUMN "ID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."CourseExtensions_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: CourseReviews; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."CourseReviews" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "CourseID" uuid NOT NULL,
    "Point" double precision NOT NULL,
    "Content" text,
    "DeletedDate" timestamp without time zone,
    "DeletedBy" uuid
);


ALTER TABLE public."CourseReviews" OWNER TO postgres;

--
-- Name: Courses; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Courses" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "MainVersionID" uuid NOT NULL,
    "LocationID" uuid,
    "OwnerID" uuid NOT NULL,
    "Cover" text,
    "Name" text,
    "Description" text,
    "PaymentType" text,
    "Extensions" jsonb,
    "Par" integer NOT NULL,
    "MoreInformations" jsonb,
    "TotalHoles" integer NOT NULL,
    "Tees" jsonb,
    "CourseHoles" jsonb,
    "PhotoIDs" text,
    "Version" integer NOT NULL,
    "IsConfirmed" boolean NOT NULL
);


ALTER TABLE public."Courses" OWNER TO postgres;

--
-- Name: GroupMembers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."GroupMembers" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "GolferID" uuid NOT NULL,
    "GroupRole" integer NOT NULL,
    "GroupID" uuid NOT NULL,
    "MemberStatus" integer NOT NULL
);


ALTER TABLE public."GroupMembers" OWNER TO postgres;

--
-- Name: Groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Groups" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "Name" text,
    "Description" text,
    "Type" integer NOT NULL,
    "GroupStatus" integer NOT NULL,
    "Cover" text,
    "DeleteDate" timestamp without time zone
);


ALTER TABLE public."Groups" OWNER TO postgres;

--
-- Name: Locations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Locations" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "MainVersionID" uuid NOT NULL,
    "OwnerID" uuid NOT NULL,
    "Name" text,
    "Description" text,
    "PhoneNumber" text,
    "FaxNumber" text,
    "Address" text,
    "IsConfirmed" boolean NOT NULL,
    "GPSAddress" jsonb,
    "Country" text,
    "Website" text,
    "HeadOffice" text,
    "Version" integer NOT NULL,
    "Email" text,
    "DeletedDate" timestamp without time zone,
    "DeletedBy" uuid
);


ALTER TABLE public."Locations" OWNER TO postgres;

--
-- Name: Notifications; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Notifications" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "golferID" uuid NOT NULL,
    "Content" text,
    "Objects" jsonb,
    "ReferObject" jsonb,
    "IsViewed" boolean NOT NULL,
    "DeletedDate" timestamp without time zone
);


ALTER TABLE public."Notifications" OWNER TO postgres;

--
-- Name: Photos; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Photos" (
    "ID" uuid NOT NULL,
    "Name" text,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "Type" integer NOT NULL
);


ALTER TABLE public."Photos" OWNER TO postgres;

--
-- Name: PostVotes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."PostVotes" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "PostID" uuid NOT NULL,
    "CommentID" uuid,
    "Type" integer NOT NULL
);


ALTER TABLE public."PostVotes" OWNER TO postgres;

--
-- Name: Posts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Posts" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone,
    "ModifiedBy" uuid,
    "DeleteDate" timestamp without time zone,
    "DeleteBy" uuid,
    "OwnerID" uuid NOT NULL,
    "Type" integer NOT NULL,
    "Privacy" integer NOT NULL,
    "Content" text,
    "TagIDs" jsonb,
    "PhotoIDs" jsonb,
    "ScorecardIDs" jsonb,
    "ParentID" uuid,
    "GroupID" uuid,
    "PostFeeling" integer
);


ALTER TABLE public."Posts" OWNER TO postgres;

--
-- Name: Products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Products" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "CourseID" uuid NOT NULL,
    "Price" double precision NOT NULL,
    "MaxPlayer" integer NOT NULL,
    "Promotion" double precision NOT NULL,
    "MembershipPromotion" double precision NOT NULL,
    "IsBooking" boolean NOT NULL,
    "Date" timestamp without time zone NOT NULL,
    "TeeTime" interval NOT NULL,
    "Description" text,
    "LisExtensionID" jsonb
);


ALTER TABLE public."Products" OWNER TO postgres;

--
-- Name: Profiles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Profiles" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "Birthday" timestamp without time zone,
    "Gender" integer NOT NULL,
    "Country" text,
    "Address" text,
    "MaritalStatus" integer NOT NULL,
    "Position" text,
    "Company" text,
    "Workfield" text,
    "Website" text,
    "Workplace" text,
    "ClothesSizeType" integer NOT NULL,
    "ShoesSizeType" integer NOT NULL,
    "ShoesSize" integer NOT NULL,
    "ShirtSize" integer NOT NULL,
    "PantsSize" integer NOT NULL,
    "FootLength" integer NOT NULL,
    "PreferredHand" integer NOT NULL,
    "Quote" text
);


ALTER TABLE public."Profiles" OWNER TO postgres;

--
-- Name: Relationships; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Relationships" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "GolferID" uuid NOT NULL,
    "FriendID" uuid NOT NULL,
    "Status" integer NOT NULL
);


ALTER TABLE public."Relationships" OWNER TO postgres;

--
-- Name: Scorecards; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Scorecards" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "OwnerID" uuid NOT NULL,
    "CourseID" uuid NOT NULL,
    "HandicapBefore" double precision NOT NULL,
    "HandicapAfter" double precision NOT NULL,
    "CourseHandicapBefore" double precision NOT NULL,
    "CourseHandicapAfter" double precision NOT NULL,
    "HandicapDifferential" double precision NOT NULL,
    "System36Handicap" double precision NOT NULL,
    "Tee" jsonb,
    "Date" date NOT NULL,
    "Holes" jsonb,
    "ParsAverage" double precision[],
    "Grosses" integer NOT NULL,
    "RealGrosses" integer NOT NULL,
    "Achievements" jsonb,
    "TotalConfrimed" integer NOT NULL,
    "IsPending" boolean NOT NULL,
    "IsVerified" boolean NOT NULL,
    "InputType" integer NOT NULL,
    "Type" integer NOT NULL,
    "BestHole" integer NOT NULL,
    "AmountHoles" integer NOT NULL
);


ALTER TABLE public."Scorecards" OWNER TO postgres;

--
-- Name: Transactions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Transactions" (
    "ID" uuid NOT NULL,
    "CreatedDate" timestamp without time zone NOT NULL,
    "CreatedBy" uuid,
    "ModifiedDate" timestamp without time zone NOT NULL,
    "ModifiedBy" uuid,
    "GolferID" uuid NOT NULL,
    "ProductID" uuid NOT NULL,
    "NumberOfGolfer" integer NOT NULL,
    "Status" integer NOT NULL,
    "Amount" double precision NOT NULL,
    "PromotionCode" text,
    "ContactInfo" jsonb,
    "Description" text,
    "MoreRequests" integer[]
);


ALTER TABLE public."Transactions" OWNER TO postgres;

--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Data for Name: AspNetRoleClaims; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetRoleClaims" ("Id", "RoleId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetRoles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") FROM stdin;
47a7c63d-4d0b-4ad7-af5a-eea268ea41e5	Golfer	GOLFER	
2c0d6a60-4e46-4560-9620-a44e34a1e110	Course Admin	CA	
226df124-2d66-4068-a6e3-2c5c242986c5	System Admin	SA	
eb6a41a3-055b-4ab5-8344-1564c4d9f26a	GSA	GSA	
\.


--
-- Data for Name: AspNetUserClaims; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserClaims" ("Id", "UserId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetUserLogins; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserLogins" ("LoginProvider", "ProviderKey", "ProviderDisplayName", "UserId") FROM stdin;
\.


--
-- Data for Name: AspNetUserRoles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserRoles" ("UserId", "RoleId") FROM stdin;
\.


--
-- Data for Name: AspNetUserTokens; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserTokens" ("UserId", "LoginProvider", "Name", "Value") FROM stdin;
\.


--
-- Data for Name: AspNetUsers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUsers" ("Id", "UserName", "NormalizedUserName", "Email", "NormalizedEmail", "EmailConfirmed", "PasswordHash", "SecurityStamp", "ConcurrencyStamp", "PhoneNumber", "PhoneNumberConfirmed", "TwoFactorEnabled", "LockoutEnd", "LockoutEnabled", "AccessFailedCount", "FirstName", "LastName", "Avatar", "Cover", "Handicap", "IDX", "CourseFavorites") FROM stdin;
\.


--
-- Data for Name: Comments; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Comments" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "DeleteDate", "DeleteBy", "GolferId", "PostID", "ParentID", "Content", "TagIDs", "PhotoID") FROM stdin;
\.


--
-- Data for Name: Conversations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Conversations" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "DeleteDate", "DeleteBy", "GolferIDs", "Messages") FROM stdin;
\.


--
-- Data for Name: CourseExtensions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."CourseExtensions" ("ID", "Name", "Icon") FROM stdin;
14	Palace	Common/CourseExtension14
13	Restaurant	Common/CourseExtension13
12	Club house	Common/CourseExtension12
11	Golf cart surcharge	Common/CourseExtension11
10	Golf cart	Common/CourseExtension10
9	Caddy	Common/CourseExtension9
7	Rent umbrella	Common/CourseExtension7
6	Rent shoes	Common/CourseExtension6
5	Rent clubs	Common/CourseExtension5
4	Pro shop	Common/CourseExtension4
3	Driving range	Common/CourseExtension3
2	Rent golf cart	Common/CourseExtension2
8	Locker	Common/CourseExtension8
1	Hire caddy	Common/CourseExtension1
\.


--
-- Data for Name: CourseReviews; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."CourseReviews" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "CourseID", "Point", "Content", "DeletedDate", "DeletedBy") FROM stdin;
\.


--
-- Data for Name: Courses; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Courses" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "MainVersionID", "LocationID", "OwnerID", "Cover", "Name", "Description", "PaymentType", "Extensions", "Par", "MoreInformations", "TotalHoles", "Tees", "CourseHoles", "PhotoIDs", "Version", "IsConfirmed") FROM stdin;
\.


--
-- Data for Name: GroupMembers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."GroupMembers" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "GolferID", "GroupRole", "GroupID", "MemberStatus") FROM stdin;
\.


--
-- Data for Name: Groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Groups" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "Name", "Description", "Type", "GroupStatus", "Cover", "DeleteDate") FROM stdin;
\.


--
-- Data for Name: Locations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Locations" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "MainVersionID", "OwnerID", "Name", "Description", "PhoneNumber", "FaxNumber", "Address", "IsConfirmed", "GPSAddress", "Country", "Website", "HeadOffice", "Version", "Email", "DeletedDate", "DeletedBy") FROM stdin;
\.


--
-- Data for Name: Notifications; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Notifications" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "golferID", "Content", "Objects", "ReferObject", "IsViewed", "DeletedDate") FROM stdin;
\.


--
-- Data for Name: Photos; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Photos" ("ID", "Name", "CreatedDate", "CreatedBy", "Type") FROM stdin;
\.


--
-- Data for Name: PostVotes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."PostVotes" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "PostID", "CommentID", "Type") FROM stdin;
\.


--
-- Data for Name: Posts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Posts" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "DeleteDate", "DeleteBy", "OwnerID", "Type", "Privacy", "Content", "TagIDs", "PhotoIDs", "ScorecardIDs", "ParentID", "GroupID", "PostFeeling") FROM stdin;
\.


--
-- Data for Name: Products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Products" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "CourseID", "Price", "MaxPlayer", "Promotion", "MembershipPromotion", "IsBooking", "Date", "TeeTime", "Description", "LisExtensionID") FROM stdin;
\.


--
-- Data for Name: Profiles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Profiles" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "Birthday", "Gender", "Country", "Address", "MaritalStatus", "Position", "Company", "Workfield", "Website", "Workplace", "ClothesSizeType", "ShoesSizeType", "ShoesSize", "ShirtSize", "PantsSize", "FootLength", "PreferredHand", "Quote") FROM stdin;
\.


--
-- Data for Name: Relationships; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Relationships" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "GolferID", "FriendID", "Status") FROM stdin;
\.


--
-- Data for Name: Scorecards; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Scorecards" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "OwnerID", "CourseID", "HandicapBefore", "HandicapAfter", "CourseHandicapBefore", "CourseHandicapAfter", "HandicapDifferential", "System36Handicap", "Tee", "Date", "Holes", "ParsAverage", "Grosses", "RealGrosses", "Achievements", "TotalConfrimed", "IsPending", "IsVerified", "InputType", "Type", "BestHole", "AmountHoles") FROM stdin;
\.


--
-- Data for Name: Transactions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Transactions" ("ID", "CreatedDate", "CreatedBy", "ModifiedDate", "ModifiedBy", "GolferID", "ProductID", "NumberOfGolfer", "Status", "Amount", "PromotionCode", "ContactInfo", "Description", "MoreRequests") FROM stdin;
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20210412145641_bruh	3.1.11
\.


--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."AspNetRoleClaims_Id_seq"', 1, false);


--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."AspNetUserClaims_Id_seq"', 1, false);


--
-- Name: CourseExtensions_ID_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."CourseExtensions_ID_seq"', 1, false);


--
-- Name: AspNetRoleClaims PK_AspNetRoleClaims; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoleClaims"
    ADD CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetRoles PK_AspNetRoles; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoles"
    ADD CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id");


--
-- Name: AspNetUserClaims PK_AspNetUserClaims; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserClaims"
    ADD CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetUserLogins PK_AspNetUserLogins; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserLogins"
    ADD CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey");


--
-- Name: AspNetUserRoles PK_AspNetUserRoles; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId");


--
-- Name: AspNetUserTokens PK_AspNetUserTokens; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserTokens"
    ADD CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name");


--
-- Name: AspNetUsers PK_AspNetUsers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUsers"
    ADD CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id");


--
-- Name: Comments PK_Comments; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Comments"
    ADD CONSTRAINT "PK_Comments" PRIMARY KEY ("ID");


--
-- Name: Conversations PK_Conversations; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Conversations"
    ADD CONSTRAINT "PK_Conversations" PRIMARY KEY ("ID");


--
-- Name: CourseExtensions PK_CourseExtensions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."CourseExtensions"
    ADD CONSTRAINT "PK_CourseExtensions" PRIMARY KEY ("ID");


--
-- Name: CourseReviews PK_CourseReviews; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."CourseReviews"
    ADD CONSTRAINT "PK_CourseReviews" PRIMARY KEY ("ID");


--
-- Name: Courses PK_Courses; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Courses"
    ADD CONSTRAINT "PK_Courses" PRIMARY KEY ("ID");


--
-- Name: GroupMembers PK_GroupMembers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupMembers"
    ADD CONSTRAINT "PK_GroupMembers" PRIMARY KEY ("ID");


--
-- Name: Groups PK_Groups; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Groups"
    ADD CONSTRAINT "PK_Groups" PRIMARY KEY ("ID");


--
-- Name: Locations PK_Locations; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Locations"
    ADD CONSTRAINT "PK_Locations" PRIMARY KEY ("ID");


--
-- Name: Notifications PK_Notifications; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Notifications"
    ADD CONSTRAINT "PK_Notifications" PRIMARY KEY ("ID");


--
-- Name: Photos PK_Photos; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Photos"
    ADD CONSTRAINT "PK_Photos" PRIMARY KEY ("ID");


--
-- Name: PostVotes PK_PostVotes; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PostVotes"
    ADD CONSTRAINT "PK_PostVotes" PRIMARY KEY ("ID");


--
-- Name: Posts PK_Posts; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Posts"
    ADD CONSTRAINT "PK_Posts" PRIMARY KEY ("ID");


--
-- Name: Products PK_Products; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Products"
    ADD CONSTRAINT "PK_Products" PRIMARY KEY ("ID");


--
-- Name: Profiles PK_Profiles; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Profiles"
    ADD CONSTRAINT "PK_Profiles" PRIMARY KEY ("ID");


--
-- Name: Relationships PK_Relationships; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Relationships"
    ADD CONSTRAINT "PK_Relationships" PRIMARY KEY ("ID");


--
-- Name: Scorecards PK_Scorecards; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Scorecards"
    ADD CONSTRAINT "PK_Scorecards" PRIMARY KEY ("ID");


--
-- Name: Transactions PK_Transactions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Transactions"
    ADD CONSTRAINT "PK_Transactions" PRIMARY KEY ("ID");


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: EmailIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "EmailIndex" ON public."AspNetUsers" USING btree ("NormalizedEmail");


--
-- Name: IX_AspNetRoleClaims_RoleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON public."AspNetRoleClaims" USING btree ("RoleId");


--
-- Name: IX_AspNetUserClaims_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserClaims_UserId" ON public."AspNetUserClaims" USING btree ("UserId");


--
-- Name: IX_AspNetUserLogins_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserLogins_UserId" ON public."AspNetUserLogins" USING btree ("UserId");


--
-- Name: IX_AspNetUserRoles_RoleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON public."AspNetUserRoles" USING btree ("RoleId");


--
-- Name: IX_Comments_GolferId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Comments_GolferId" ON public."Comments" USING btree ("GolferId");


--
-- Name: IX_Courses_LocationID; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Courses_LocationID" ON public."Courses" USING btree ("LocationID");


--
-- Name: IX_Posts_GroupID; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Posts_GroupID" ON public."Posts" USING btree ("GroupID");


--
-- Name: IX_Posts_OwnerID; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Posts_OwnerID" ON public."Posts" USING btree ("OwnerID");


--
-- Name: IX_Posts_ParentID; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Posts_ParentID" ON public."Posts" USING btree ("ParentID");


--
-- Name: IX_Scorecards_CourseID; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Scorecards_CourseID" ON public."Scorecards" USING btree ("CourseID");


--
-- Name: IX_Scorecards_OwnerID; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Scorecards_OwnerID" ON public."Scorecards" USING btree ("OwnerID");


--
-- Name: RoleNameIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "RoleNameIndex" ON public."AspNetRoles" USING btree ("NormalizedName");


--
-- Name: UserNameIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "UserNameIndex" ON public."AspNetUsers" USING btree ("NormalizedUserName");


--
-- Name: AspNetRoleClaims FK_AspNetRoleClaims_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoleClaims"
    ADD CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserClaims FK_AspNetUserClaims_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserClaims"
    ADD CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserLogins FK_AspNetUserLogins_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserLogins"
    ADD CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserTokens FK_AspNetUserTokens_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserTokens"
    ADD CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: Comments FK_Comments_AspNetUsers_GolferId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Comments"
    ADD CONSTRAINT "FK_Comments_AspNetUsers_GolferId" FOREIGN KEY ("GolferId") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Courses FK_Courses_Locations_LocationID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Courses"
    ADD CONSTRAINT "FK_Courses_Locations_LocationID" FOREIGN KEY ("LocationID") REFERENCES public."Locations"("ID") ON DELETE RESTRICT;


--
-- Name: Posts FK_Posts_AspNetUsers_OwnerID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Posts"
    ADD CONSTRAINT "FK_Posts_AspNetUsers_OwnerID" FOREIGN KEY ("OwnerID") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: Posts FK_Posts_Groups_GroupID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Posts"
    ADD CONSTRAINT "FK_Posts_Groups_GroupID" FOREIGN KEY ("GroupID") REFERENCES public."Groups"("ID") ON DELETE RESTRICT;


--
-- Name: Posts FK_Posts_Posts_ParentID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Posts"
    ADD CONSTRAINT "FK_Posts_Posts_ParentID" FOREIGN KEY ("ParentID") REFERENCES public."Posts"("ID") ON DELETE RESTRICT;


--
-- Name: Scorecards FK_Scorecards_AspNetUsers_OwnerID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Scorecards"
    ADD CONSTRAINT "FK_Scorecards_AspNetUsers_OwnerID" FOREIGN KEY ("OwnerID") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: Scorecards FK_Scorecards_Courses_CourseID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Scorecards"
    ADD CONSTRAINT "FK_Scorecards_Courses_CourseID" FOREIGN KEY ("CourseID") REFERENCES public."Courses"("ID") ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

